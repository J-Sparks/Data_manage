for( i in 1:nrow(NewDF_MR)){
  if(NewDF_MR$Univ_30HrsEarned[i] == "Yes" & NewDF_MR$Dropouts[i]  == "No" ){
    NewDF_MR$RankHrsDrop[i] <- 1
  } else if(NewDF_MR$Univ_30HrsEarned[i] == "Yes" & NewDF_MR$Dropouts[i]  ==  "Yes" ){
    NewDF_MR$RankHrsDrop[i] <- 2
  }else if(NewDF_MR$Univ_30HrsEarned[i] == "No" & NewDF_MR$Dropouts[i]  == "No" ){
    NewDF_MR$RankHrsDrop[i] <- 3
  }else if(NewDF_MR$Univ_30HrsEarned[i] == "No" & NewDF_MR$Dropouts[i]  == "Yes" ){
    NewDF_MR$RankHrsDrop[i] <- 4
  }
}

library(dplyr)
library(tidyr)
library(lattice)
library(nnet)
library(caret)

densityplot(~ Stu_TotalInstGradePoints, group = RankHrsDrop, 
            data = NewDF_MR_R2and3_HMCSE, auto.key = TRUE)


NewDF_MR$RankHrsDrop <- factor(NewDF_MR$RankHrsDrop)
NewDF_MR$OUT <- relevel(NewDF_MR$RankHrsDrop, ref = "1")
modelRankHD <- multinom(OUT~GPA_HIGHSCHOOL+Stu_College+Stu_MajorDesc.x  +
                          Stu_Ethnicity+Stu_County+Stu_GenderCode, data = NewDF_MR)
summary(modelRankHD)

confMatRank <- table(predict(modelRankHD), NewDF_MR$RankHrsDrop)
confMatRank
sum(diag(confMatRank)/sum(confMatRank))
1-sum(diag(confMatRank)/sum(confMatRank)) 

p <- predict(modelRankHD_term1, NewDF_MR)
pred <- predict(modelRankHD_term1, NewDF_MR[c(1:10),], type="prob")
pred

n <- table(NewDF_MR$RankHrsDrop)
n
n/sum(n)

p <- predict(modelRankHD_term1, NewDF_MR)
tab <- table(p, NewDF_MR$RankHrsDrop)
tab/colSums(tab)

# modeling examples
NewDF_MR_HMCSE <- read.csv(file.choose(),header = T)
NewDF_MR_HMCSE$RankHrsDrop <- factor(NewDF_MR_HMCSE$RankHrsDrop)
NewDF_MR_HMCSE$OUT <- relevel(NewDF_MR_HMCSE$RankHrsDrop, ref = "1")
    # mdeling
model_HMCSE <- multinom(OUT~GPA_HIGHSCHOOL+PriorHrs+Stu_Ethnicity  +
                          Stu_NationCode+Stu_Department+Term1Hrs+Term1TGP, 
                        data = NewDF_MR_HMCSE)
summary(model_HMCSE)
confMatRank <- table(predict(modelRankHD), NewDF_MR$RankHrsDrop)
confMatRank
sum(diag(confMatRank)/sum(confMatRank))
1-sum(diag(confMatRank)/sum(confMatRank)) 

p <- predict(modelRankHD_term1, NewDF_MR)
pred <- predict(modelRankHD_term1, NewDF_MR[c(1:10),], type="prob")
pred

n <- table(NewDF_MR$RankHrsDrop)
n
n/sum(n)

p <- predict(modelRankHD_term1, NewDF_MR)
tab <- table(p, NewDF_MR$RankHrsDrop)
tab/colSums(tab)


## example2
model_HMCSE_1 <- multinom(OUT~GPA_HIGHSCHOOL+PriorHrs+Stu_Department+Stu_MajorDesc.y+Term1Hrs+Term1TGP+Stu_Ethnicity, 
                          data = NewDF_MR_HMCSE)
summary(model_HMCSE_1)
confMatRank <- table(predict(model_HMCSE_1), NewDF_MR_HMCSE$RankHrsDrop)
confMatRank
sum(diag(confMatRank)/sum(confMatRank)) ### 79.8% accuracy
1-sum(diag(confMatRank)/sum(confMatRank)) 

p <- predict(model_HMCSE_1, NewDF_MR_HMCSE)
pred <- predict(model_HMCSE_1, NewDF_MR_HMCSE[c(1:10),], type="prob")
pred

n <- table(NewDF_MR_HMCSE$RankHrsDrop)
n
n/sum(n)

p <- predict(model_HMCSE_1, NewDF_MR_HMCSE)
tab <- table(p, NewDF_MR_HMCSE$RankHrsDrop)
tab/colSums(tab)

head(cbind(p,mydata))
prediction <- cbind(p,mydata)
write.csv(predictin, "Pred.mydata.csv")
